String version = "0.0.1-SNAPSHOT"
String uiVersion = "8"

task buildIcons << {
    javaexec {
        main = "-jar"
        args = [
                "gradle/tools/ps-image-tool/ps-image-tool-1.0-SNAPSHOT.jar",
                "src/icons/res",
                "build/icons.zip/res/drawable-hdpi",
                "90",
                "90"
        ]
    }
    javaexec {
        main = "-jar"
        args = [
                "gradle/tools/ps-image-tool/ps-image-tool-1.0-SNAPSHOT.jar",
                "src/icons/res",
                "build/icons.zip/res/drawable-xhdpi",
                "136",
                "136"
        ]
    }
    javaexec {
        main = "-jar"
        args = [
                "gradle/tools/ps-image-tool/ps-image-tool-1.0-SNAPSHOT.jar",
                "src/icons/res",
                "build/icons.zip/res/drawable-xxhdpi",
                "192",
                "192"
        ]
    }
    javaexec {
        main = "-jar"
        args = [
                "gradle/tools/ps-image-tool/ps-image-tool-1.0-SNAPSHOT.jar",
                "src/icons/res",
                "build/icons.zip/res/drawable-xxxhdpi",
                "224",
                "224"
        ]
    }
}

task buildXml << {
    String descriptionTemplate = new File('description.xml').getText('UTF-8')
    descriptionTemplate = descriptionTemplate.replaceAll('\\$version', version).replaceAll('\\$uiVersion', uiVersion)
    println(descriptionTemplate)

    File description = new File('build/description.xml')
    description.write(descriptionTemplate)
}

task debug << {
    file('build').deleteDir()

    buildIcons.execute()

    buildXml.execute()

    packageIcons.execute()

    release.execute()
}

task packageIcons(type: Zip) {
    from 'build/icons.zip/'
    archiveName 'icons'
    destinationDir(file('/build'))
}

task release(type: Zip) {
    from (['build/icons', 'build/description.xml'])
    archiveName "debug-${new Date().format('yyyyMMdd-HHmm')}.mtz"
    destinationDir(file('build'))
}